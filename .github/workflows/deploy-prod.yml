name: Deploy to Prod

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  THEME_DIR: themes/insta
  PLUGIN_DIR: plugins/grd-acf-blocks

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        env:
          PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          tools: composer:v2

      - name: Setup Composer
        id: composer-cache
        run: |
          echo '${{ secrets.COMPOSER_AUTH }}' > $GITHUB_WORKSPACE/auth.json
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install WordPress Plugins
        run: composer install --prefer-dist --no-dev

      - name: Build Theme
        run: |
          cd ${{ env.THEME_DIR }}
          composer install
          npm ci --ignore-scripts
          npm run build

      - name: Build Plugin
        run: |
          cd ${{ env.PLUGIN_DIR }}
          composer install
          npm ci --ignore-scripts
          npm run build

      - name: Deploy to Prod
        run: |
          set -e
          rsync -avz --exclude-from='.rsync-exclude' -e "ssh -i private_key.pem" ./ ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_PATH }}
